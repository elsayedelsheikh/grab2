services:
  isaac-sim:
    container_name: isaacsim450
    image: nvcr.io/nvidia/isaac-sim:4.5.0
    environment:
      - ACCEPT_EULA=Y
      - PRIVACY_CONSENT=Y
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/isaac-sim/exts/isaacsim.ros2.bridge/humble/lib
    entrypoint: bash
    working_dir: /isaac_sim_worlds
    volumes:
      - ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw
      - ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw
      - ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw
      - ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw
      - ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw
      - ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw
      - ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw
      - ~/docker/isaac-sim/documents:/root/Documents:rw
      - ./isaac_sim_worlds:/isaac_sim_worlds:ro
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    network_mode: host

  isaac-simple-room:
    extends: isaac-sim
    command: ["./isaac_py.sh", "panda_bin_cubes.py"]

  isaac-toybox:
    extends: isaac-sim
    command: ["./isaac_py.sh", "panda_toybox.py"]

  grab2:
    container_name: grab2
    image: grab2
    build:
      context: .
      dockerfile: .docker/Dockerfile
      target: dev
      args:
        - USERNAME=${USERNAME:-ros}
        - USER_UID=${UID:-1000}
        - USER_GID=${UID:-1000}
    # Interactive Shell
    stdin_open: true
    tty: true
    # Networking
    network_mode: host
    ipc: host
    environment:
      - ROS_DOMAIN_ID=0
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    working_dir: /ros2_ws
    user: ${USERNAME:-ros}
    volumes:
      - ./.docker/entrypoint.sh:/entrypoint.sh:ro
      - ./grab2_behavior_tree:/ros2_ws/src/grab2_behavior_tree:ro
      - ./grab2_controller:/ros2_ws/src/grab2_controller:ro
      - ./grab2_interfaces:/ros2_ws/src/grab2_interfaces:ro
      - ./grab2_curobo_planner:/ros2_ws/src/grab2_curobo_planner:ro
      - ./.colcon/build/:/ros2_ws/build/:rw
      - ./.colcon/install/:/ros2_ws/install/:rw
      - ./.colcon/log/:/ros2_ws/log/:rw
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    entrypoint: ["/entrypoint.sh"]

  simple-room-demo:
    extends: grab2
    command: >
      ros2 launch grab2_behavior_tree bt_demo.launch.py
      robot:=panda
      world:=table
      behavior:=collect_cubes

  simple-room-demo-no-isaac:
    extends: grab2
    command: >
      ros2 launch grab2_behavior_tree bt_demo.launch.py
      robot:=panda
      world:=table
      behavior:=collect_cubes
      hardware:=mock_components

  toybox-demo:
    extends: grab2
    command: >
      ros2 launch grab2_behavior_tree bt_demo.launch.py
      robot:=panda
      world:=toybox
      behavior:=collect_toys
